{"version":3,"sources":["../src/opencast_player.js"],"names":["define","$","initOcToPaella","wwwroot","M","cfg","initManage","configUrl","ready","iframeWindow","document","getElementById","contentWindow","paella_debug_baseUrl","paella","lazyLoad","setTimeout","loadVideo","Promise","resolve","OpencastToPaellaConverter","base","data","convertToDataJson","window","episode","init"],"mappings":"AAAAA,OAAM,gCAAC,CAAC,QAAD,CAAW,2CAAX,CAAD,CACF,SAASC,CAAT,CAAYC,CAAZ,CAA4B,CAExB,GAAIC,CAAAA,CAAO,CAAGC,CAAC,CAACC,GAAF,CAAMF,OAApB,CAEA,QAASG,CAAAA,CAAT,CAAoBC,CAApB,CAA+B,CAC3BN,CAAC,GAAGO,KAAJ,CAAU,UAAM,CACZ,GAAMC,CAAAA,CAAY,CAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,aAA9D,CACAH,CAAY,CAACI,oBAAb,CAAoCV,CAAO,CAAG,kCAA9C,CACA,GAAI,CAACM,CAAY,CAACK,MAAd,EAAwB,CAACL,CAAY,CAACK,MAAb,CAAoBC,QAAjD,CAA2D,CACvDC,UAAU,CAACV,CAAD,CAAa,EAAb,CAAiBC,CAAjB,CAAV,CACA,MACH,CACDE,CAAY,CAACK,MAAb,CAAoBC,QAApB,CAA6B,iBAA7B,CAAgD,CAC5CR,SAAS,CAAEA,CADiC,CAE5CU,SAAS,CAAE,oBAAW,CAClB,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,CAAD,CAAa,IACtBC,CAAAA,CAAyB,CAAGlB,CAAc,CAACO,CAAY,CAACY,IAAd,CAAoBZ,CAAY,CAACK,MAAjC,CADpB,CAExBQ,CAAI,CAAG,GAAIF,CAAAA,CAAJ,GAAgCG,iBAAhC,CAAkDC,MAAM,CAACC,OAAzD,CAFiB,CAG5BN,CAAO,CAACG,CAAD,CACV,CAJM,CAKV,CAR2C,CAAhD,CAUH,CAjBD,CAkBH,CAED,MAAO,CACHI,IAAI,CAAEpB,CADH,CAGV,CA7BC,CAAN","sourcesContent":["define(['jquery', 'mod_opencast/opencast_to_paella_converter'],\n    function($, initOcToPaella) {\n\n        var wwwroot = M.cfg.wwwroot;\n\n        function initManage(configUrl) {\n            $().ready(() => {\n                const iframeWindow = document.getElementById('player-iframe').contentWindow;\n                iframeWindow.paella_debug_baseUrl = wwwroot + '/mod/opencast/paella/repository/';\n                if (!iframeWindow.paella || !iframeWindow.paella.lazyLoad) {\n                    setTimeout(initManage, 20, configUrl);\n                    return;\n                }\n                iframeWindow.paella.lazyLoad('playerContainer', {\n                    configUrl: configUrl,\n                    loadVideo: function() {\n                        return new Promise((resolve) => {\n                            const OpencastToPaellaConverter = initOcToPaella(iframeWindow.base, iframeWindow.paella);\n                            let data = new OpencastToPaellaConverter().convertToDataJson(window.episode);\n                            resolve(data);\n                        });\n                    }\n                });\n            });\n        }\n\n        return {\n            init: initManage\n        };\n    });\n"],"file":"opencast_player.min.js"}